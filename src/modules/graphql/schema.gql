# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateCustomerInput {
  address: String!
  city: String!
  companyName: String
  customerCode: String!
  customerSegmentId: ID!
}

input CreateCustomerSegmentInput {
  """Description of the customer segment"""
  description: String

  """Name of the customer segment"""
  name: String!
}

input CreateProductInput {
  """Product base price"""
  basePrice: Float!

  """Product description"""
  description: String

  """Product name"""
  productName: String!

  """Product SKU"""
  sku: String!

  """Product stock quantity"""
  stockQuantity: Int!
}

input CreateProductPriceInput {
  """ID của phân khúc khách hàng"""
  customerSegmentId: String!

  """Phần trăm giảm giá cho phân khúc này"""
  discountPercentage: Float!

  """Giá cuối cùng cho phân khúc này"""
  finalPrice: Float!

  """ID của sản phẩm"""
  productId: String!
}

input CreateProductUnitInput {
  """Tỷ lệ quy đổi so với đơn vị cơ bản (vd: 1 thùng = 24 lon)"""
  conversionRate: Float! = 1

  """Price per unit"""
  price: Float!

  """Associated product ID"""
  productId: ID!

  """Số lượng tồn kho theo đơn vị này"""
  stockQuantity: Int!

  """Unit name (thùng, hộp, kg, lon, ...)"""
  unitName: String!
}

input CreateUserInput {
  """Customer ID"""
  customerId: ID

  """User email"""
  email: String!

  """User first name"""
  firstName: String!

  """User last name"""
  lastName: String!

  """User password"""
  password: String!

  """User phone"""
  phone: String

  """User role"""
  role: Role!
}

type Customer {
  address: String!
  city: String!
  companyName: String!
  createdAt: DateTime
  customerCode: String!
  deletedAt: DateTime
  id: ID!
  segment: CustomerSegment!
  updatedAt: DateTime
  user: User!
}

type CustomerSegment {
  createdAt: DateTime
  customerSegmentCode: String!
  customers: [Customer!]!
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  prices: [ProductPrice!]!
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""User gender enum"""
enum Gender {
  FEMALE
  MALE
}

input LoginInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

type LoginOutput {
  access_token: String!
  refresh_token: String!
}

type Mutation {
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!
  createCustomerSegment(createCustomerSegmentInput: CreateCustomerSegmentInput!): CustomerSegment!
  createProduct(createProductInput: CreateProductInput!): Product!
  createProductPrice(createProductPriceInput: CreateProductPriceInput!): ProductPrice!
  createProductUnit(createProductUnitInput: CreateProductUnitInput!): ProductUnit!
  createUser(createUserInput: CreateUserInput!): User!
  refreshToken(refreshToken: String!): LoginOutput!
  removeCustomer(id: ID!): Customer!
  removeCustomerSegment(id: ID!): CustomerSegment!
  removeProduct(id: ID!): Product!
  removeProductPrice(id: ID!): ProductPrice!
  removeProductUnit(id: ID!): Boolean!
  removeUser(id: String!): User!
  signin(signinInput: LoginInput!): LoginOutput!
  signup(signupInput: SignupInput!): User!
  softRemoveCustomer(id: ID!): Customer!
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!
  updateCustomerSegment(updateCustomerSegmentInput: UpdateCustomerSegmentInput!): CustomerSegment!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  updateProductPrice(updateProductPriceInput: UpdateProductPriceInput!): ProductPrice!
  updateProductUnit(updateProductUnitInput: UpdateProductUnitInput!): ProductUnit!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Product {
  """Product base price"""
  basePrice: Float!
  createdAt: DateTime
  deletedAt: DateTime

  """Product description"""
  description: String!

  """Product ID"""
  id: ID!
  prices: [ProductPrice!]!

  """Product name"""
  productName: String!

  """Product SKU"""
  sku: String!

  """Product stock quantity"""
  stockQuantity: Int!
  units: [ProductUnit!]!
  updatedAt: DateTime
}

type ProductPrice {
  createdAt: DateTime
  customerSegment: CustomerSegment!

  """Phần trăm giảm giá cho phân khúc này"""
  discountPercentage: Float!

  """Giá cuối cùng cho phân khúc này"""
  finalPrice: Float!
  id: ID!
  product: Product!
  updatedAt: DateTime
}

type ProductUnit {
  """Tỷ lệ quy đổi so với đơn vị cơ bản (vd: 1 thùng = 24 lon)"""
  conversionRate: Float!
  createdAt: DateTime
  deletedAt: DateTime
  id: ID!

  """Price per unit"""
  price: Float!
  product: Product!

  """Số lượng tồn kho theo đơn vị này"""
  stockQuantity: Float!

  """Unit name (thùng, hộp, kg, lon, ...)"""
  unitName: String!
  updatedAt: DateTime
}

type Query {
  customer(id: ID!): Customer!
  customerSegment(id: ID!): CustomerSegment!
  customerSegments(queryCustomerSegmentInput: QueryCustomerSegmentInput!): [CustomerSegment!]!
  customers(queryCustomerInput: QueryCustomerInput!): [Customer!]!
  me: User!
  product(id: ID!): Product!
  productPrice(id: ID!): ProductPrice!
  productPrices(queryProductPriceInput: QueryProductPriceInput!): [ProductPrice!]!
  productUnit(id: ID!): ProductUnit!
  productUnits: [ProductUnit!]!
  products(queryProductInput: QueryProductInput!): [Product!]!
  user(id: String!): User!
  users(queryUserInput: QueryUserInput!): [User!]!
}

input QueryCustomerInput {
  address: String
  city: String
  companyName: String
  customerCode: String
  limit: Int! = 10
  offset: Int! = 0
  sortOrder: SortOrder = DESC
}

input QueryCustomerSegmentInput {
  customerSegmentCode: String
  limit: Int! = 10
  name: String
  offset: Int! = 0
  sortOrder: SortOrder = DESC
}

input QueryProductInput {
  limit: Int! = 10
  offset: Int! = 0
  productName: String
  productSKU: String
  sortOrder: SortOrder = DESC
}

input QueryProductPriceInput {
  limit: Int! = 10

  """Giá tối đa"""
  maxPrice: Int!

  """Giá tối thiểu"""
  minPrice: Int!
  offset: Int! = 0
  sortOrder: SortOrder = DESC
}

input QueryUserInput {
  email: String
  limit: Int! = 10
  offset: Int! = 0
  phone: String
  role: Role
  sortOrder: SortOrder = DESC
}

"""User role enum"""
enum Role {
  ADMIN
  CUSTOMER
}

input SignupInput {
  """User email"""
  email: String!

  """User first name"""
  firstName: String!

  """User gender"""
  gender: Gender

  """User last name"""
  lastName: String!

  """User password"""
  password: String!

  """User phone number"""
  phone: String

  """User role"""
  role: Role!
}

enum SortOrder {
  ASC
  DESC
}

input UpdateCustomerInput {
  address: String
  city: String
  companyName: String
  customerCode: String
  customerSegmentId: ID

  """Customer ID"""
  id: ID!
}

input UpdateCustomerSegmentInput {
  """Description of the customer segment"""
  description: String

  """Customer Segment ID"""
  id: ID!

  """Name of the customer segment"""
  name: String
}

input UpdateProductInput {
  """Product base price"""
  basePrice: Float

  """Product description"""
  description: String

  """Product ID"""
  id: ID!

  """Product name"""
  productName: String

  """Product SKU"""
  sku: String

  """Product stock quantity"""
  stockQuantity: Int
}

input UpdateProductPriceInput {
  """ID của phân khúc khách hàng"""
  customerSegmentId: String

  """Phần trăm giảm giá cho phân khúc này"""
  discountPercentage: Float

  """Giá cuối cùng cho phân khúc này"""
  finalPrice: Float

  """Product Price ID"""
  id: ID!

  """ID của sản phẩm"""
  productId: String
}

input UpdateProductUnitInput {
  """Tỷ lệ quy đổi so với đơn vị cơ bản (vd: 1 thùng = 24 lon)"""
  conversionRate: Float = 1
  id: ID!

  """Price per unit"""
  price: Float

  """Associated product ID"""
  productId: ID

  """Số lượng tồn kho theo đơn vị này"""
  stockQuantity: Int

  """Unit name (thùng, hộp, kg, lon, ...)"""
  unitName: String
}

input UpdateUserInput {
  """Customer ID"""
  customerId: ID

  """User email"""
  email: String

  """User first name"""
  firstName: String
  id: ID!

  """User last name"""
  lastName: String

  """User password"""
  password: String

  """User phone"""
  phone: String

  """User role"""
  role: Role
}

type User {
  createdAt: DateTime
  customer: Customer!
  deletedAt: DateTime
  email: String!
  firstName: String!
  gender: Gender
  id: ID!
  lastName: String!
  password: String!
  phone: String
  refreshToken: String
  role: Role!
  updatedAt: DateTime
}